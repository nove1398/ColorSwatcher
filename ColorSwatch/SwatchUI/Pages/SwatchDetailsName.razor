@page "/swatch-details/name/{id}"
@inject HttpClient Http

@if (color == null)
{
    <div class="text-danger">@errorMessage</div>
    return;
}
<ColorSwatchComponent ColorHex="@color.ColorValue"></ColorSwatchComponent>

<ColorSwatchTintComponent ColorHex="@color.ColorValue" IsHex="true" />

@code {
    [Parameter] public string Id { get; set; }

    private ColorResponse color;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {

            var result = await Http.GetFromJsonAsync<ApiResponse<ColorResponse>>($"name/{Id}");
            if (result.Data == null)
            {
                errorMessage = "Color does not exist in database";
                return;
            }
            color = result.Data;
        }
        catch (Exception ex)
        {

        }

    }

    protected override async Task OnParametersSetAsync()
    {
        try
        {

            var result = await Http.GetFromJsonAsync<ApiResponse<ColorResponse>>($"name/{Id}");
            if (result.Data == null)
            {
                errorMessage = "Color does not exist in database";
                return;
            }
            color = result.Data;
        }
        catch (Exception ex)
        {

        }
    }
}